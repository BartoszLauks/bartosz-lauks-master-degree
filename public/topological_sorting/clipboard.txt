class Graph:
    def __init__(self):
        self.graph = {}

    def add_edge(self, source, destination):
        if source not in self.graph:
            self.graph[source] = []
        self.graph[source].append(destination)
        if destination not in self.graph:
            self.graph[destination] = []


def topological_sort(graph: Graph) -> []:
# Your algorithm implementation


if __name__ == '__main__':
    g = Graph()

    g.add_edge(5, 2)
    g.add_edge(5, 0)
    g.add_edge(4, 0)
    g.add_edge(4, 1)
    g.add_edge(2, 3)
    g.add_edge(3, 1)

    print("Topological Sorting:")
    print(topological_sort(g))
    # Result for this main:
    # Topological Sorting:
    # [4, 5, 0, 2, 3, 1]